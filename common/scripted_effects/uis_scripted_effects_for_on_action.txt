centralization_mechanic_on_province_owner_change = {
	if = {
		limit = {
			OR = {
				owner = {
					full_idea_group = centralization_ideas
				}
				owner = {
					overlord = {
						full_idea_group = centralization_ideas
					}
				}
			}
		}
		ROOT = {
			owner = {
				if = {
					limit = { full_idea_group = centralization_ideas }
					centralization_mechanic = yes
				}
				subject_centralization_mechanic = yes
			}
		}
	}
}
centralization_mechanic_on_create_vassal = {
	if = {
		limit = {
			FROM = {
				full_idea_group = centralization_ideas
			}
		}		
		ROOT = {
			subject_centralization_mechanic = yes
		}
	}
}
centralization_mechanic_on_dependecy_gained = {
	if = {
		limit = {
			ROOT = {
				full_idea_group = centralization_ideas
			}
		}		
		ROOT = {
			subject_centralization_mechanic = yes
		}
	}
}
centralization_mechanic_on_dependency_lost = {
	FROM = {
		if = { # Should run on abandoning or annexing vassals
			limit = {
				FROM = {
					any_owned_province = {
						has_province_modifier = centralized_region
					}
				}
			}
			every_owned_province = {
				limit = {
					has_province_modifier = centralized_region
				}
				remove_province_modifier = centralized_region
			}
		}
	}
}
centralization_mechanic_on_added_to_company = {
	if = {
		limit = { has_province_modifier = not_centralized_region }
		remove_province_modifier = not_centralized_region
	}
}
centralization_mechanic_on_removed_from_company = {
	if = {
		limit = {
			FROM = { full_idea_group = centralization_ideas }
		}
		add_province_modifier = {
			name = not_centralized_region
			duration = -1
		}
	}
}
centralization_mechanic_capital_moved = { # Deletes all modifiers and re-applies to new region.
	owner = {
		every_owned_province = {
			remove_province_modifier = centralized_region
			remove_province_modifier = not_centralized_region
		}
		every_subject_country = {
			every_owned_province = {
				limit = {
					has_province_modifier = centralized_region
				}
				remove_province_modifier = centralized_region
			}
		}
		hidden_effect = {
			centralization_mechanic = yes
			subject_centralization_mechanic = yes
		}
	}
}
# Junta Disaster
junta_event_battle_won_unit_effect = {
	if = {
		limit = {
			unit_owner = {
				has_country_flag = uis_junta_disaster_started
			}
			is_ruler_commanding_unit = yes
			enemy_unit = {
				unit_owner = {
					tag = REB
				}
			}
		}
		unit_owner = {
			change_variable = {
				which = uis_junta_rebels_defeated
				value = 1
			}
			uis_junta_rebel_readiness_decrease = yes
		}
	}
	if = {
		limit = {
			unit_owner = {
				has_country_flag = uis_junta_disaster_started
				NOT = {
					has_country_flag = uis_junta_dealtwithrebelleader
				}
				check_variable = {
					which = uis_junta_rebels_defeated
					value = 4
				}
				NOT = {
					check_variable = {
						which = uis_junta_rebels_defeated
						value = 5
					}
				}
			}
			is_ruler_commanding_unit = yes
			enemy_unit = {
				unit_owner = {
					TAG = REB
				}
			}
		}
		ROOT = {
			unit_owner = {
				set_saved_name = {
					key = rebel_leader
					type = advisor
				}
				country_event = {#Offer Defection event
					id = uis_ideagroups.40051
				}
			}
		}
	}
}

# Quality Ideas
on_province_owner_change_quality_mechanic = {
	if = {
		limit = {
			root = {
				owner = {
					full_idea_group = quality_ideas
				}
			}
		}
		root = {
			owner = {
				quality_mechanic = yes
			}
		}
	}
}