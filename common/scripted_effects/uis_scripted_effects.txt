# Naval Ideas
clear_naval_specialization ={
	remove_country_modifier = naval_light_special
	remove_country_modifier = naval_heavy_special
	remove_country_modifier = naval_galley_special
	clr_country_flag = specialized_navy
}

# Tactic Ideas
clear_tactic_bonus_modifiers = {
	remove_country_modifier = balanced_tactics
	remove_country_modifier = fire_tactics
	remove_country_modifier = shock_tactics
	remove_country_modifier = quantity_over_quality_tactics
}

# Cavalry Ideas
clear_cavalry_bonus_modifiers = {
	remove_country_modifier = cavalry_partially_trained
	remove_country_modifier = cavalry_mostly_trained
	remove_country_modifier = cavalry_fully_trained
}

# Academy Ideas
estate_action_GRANT_GENERALSHIP_ACADEMY = {
	if = {
		limit = {
			full_idea_group = innovativeness_ideas
		}
		create_general_scaling_with_tradition_and_pips = {
			add_fire = 1
			add_shock = 1
			add_manuever = 1
			add_siege = 1
		}
	}
	else = {
		create_leader_scaling_with_tradition = {
			leader = general
			type = army
		}
	}
	#add_estate_influence_modifier = {
	#	estate = estate_academy
	#	desc = EST_VAL_GRANTED_GENERALSHIP
	#	influence = 20
	#	duration = 3650
	#}
	add_estate_loyalty = {
		estate = estate_academy
		loyalty = 10
	}
}

# Maritime Ideas
remove_marine_base = {
	if = {
		limit = {
			OR = {
				NOT = {
					root = {
						has_building = impressment_offices
					}
				}
				NOT = {
					owner = {
						full_idea_group = maritime_ideas
					}
				}
				
			}
		}
		remove_province_triggered_modifier = marine_fraction_build
		remove_province_triggered_modifier = marine_sailor_base
		hidden_effect = {
			clr_province_flag = has_marine_base
		}
	}
}
add_marine_base = {
	if = {
		limit = {
			owner = {
				full_idea_group = maritime_ideas
			}
		}
		if = {
			limit = {
				OR = {
					has_dlc = "Rule Britannia"
					has_dlc = "Golden Century"
					has_dlc = "Lions of the North"
					has_dlc = "Domination"
				}
			}
			add_province_triggered_modifier = marine_fraction_build
		}
		else = {
			add_province_triggered_modifier = marine_sailor_base
		}
		hidden_effect = {
			set_province_flag = has_marine_base
		}

	}
}

#Centralization Regional Effect
add_fully_centralized = {
	capital_scope = {
		region = {
			limit = { 
				owned_by = root
				owner = {
					full_idea_group = centralization_ideas
				}
			}
			add_province_modifier = {
				name = centralized_region
				duration = -1
				hidden = yes
			}						
			#add_province_triggered_modifier = centralized_region
		}
		
	}

	
}
#mostly bug free 
add_fully_centralized_subject = {
	hidden_effect = {
		capital_scope = {
			region = {
				save_event_target_as = tarRegion
			}
		}	
	}
	every_subject_country = {
		if = {
			limit = {
				capital_scope = {
					region = event_target:tarRegion
				}
			}
			capital_scope = {
				region = {
					limit = {
						owner = {
							is_subject_of = root
						}
					}
					add_province_modifier = {
						name = centralized_subject_local
						duration = -1
					}
				}					
			}
			add_country_modifier = {
				name = centralized_subject_loyalty
				duration = -1			
			}
		}			
		
		else_if = {
			limit = {
				capital_scope = {
					not = {
						region = event_target:tarRegion
					}
				}
			}
			capital_scope = {
				region = {
					limit = {
						owned_by = this
					}
					add_province_modifier = {
						name = centralized_subject_foreign
						duration = -1
					}
				}
			}
		}
	}
}
uis_central_dependencylost = {
	#set_country_flag = uis_debug_outsideif
	FROM = {
		if = { #Should run on adbandoning or annexing vassals
			limit = {
				FROM = {
					OR = {
						any_owned_province = {
							OR = {
								has_province_modifier = centralized_subject_foreign
								has_province_modifier = centralized_subject_local
							}
						}
						has_country_modifier = centralized_subject_loyalty		
					}
				}
			}
			
			every_owned_province = {
				limit = {
					OR = {
						has_province_modifier = centralized_subject_foreign
						has_province_modifier = centralized_subject_local
					}
				}
				remove_province_modifier = centralized_subject_foreign
				remove_province_modifier = centralized_subject_local
			}
			remove_country_modifier = centralized_subject_loyalty
			#set_country_flag = uis_debug_afterowned
		}
	}
	
	
	if = { #Catch for annexing or losing dependencies to not lose all subject modifiers
		limit = {
			root = {
				not = {
					full_idea_group = centralization_ideas
				}
			}
			any_subject_country = {				
				OR = {
					has_country_modifier = centralized_subject_loyalty
					capital_scope = {
						OR = {
							has_province_modifier = centralized_subject_foreign
							has_province_modifier = centralized_subject_local
						}
					}
				}
			}
		}
		root = {
			#set_country_flag = uis_debug_overlord
		}
		every_subject_country = {
			every_owned_province = {
				limit = {
					OR = {
						has_province_modifier = centralized_subject_foreign
						has_province_modifier = centralized_subject_local
					}
				}
				remove_province_modifier = centralized_subject_foreign
				remove_province_modifier = centralized_subject_local
				#set_province_flag = uis_debug_provinceremoved
			}
			#set_country_flag = uis_debug_removed_provinceflags
			remove_country_modifier = centralized_subject_loyalty
		}
	}
}
centralization_capital_moved = { # Deletes all modifiers and re-applies to new region.
	owner = {
		every_owned_province = {
			remove_province_modifier = centralized_region
		}
		every_subject_country = {
			every_owned_province = {
				remove_province_modifier = centralized_subject_foreign
				remove_province_modifier = centralized_subject_local
			}
			remove_country_modifier = centralized_subject_loyalty
		}
		hidden_effect = {
			add_fully_centralized = yes
			add_fully_centralized_subject = yes
		}
	}
	
}
adandon_centralization = {
	every_owned_province = {
		limit = {
			has_province_modifier = centralized_region
		}
		remove_province_modifier = centralized_region
	}
	every_subject_country = {
		every_owned_province = {
			remove_province_modifier = centralized_subject_foreign
			remove_province_modifier = centralized_subject_local
		}
		remove_country_modifier = centralized_subject_loyalty
	}
}