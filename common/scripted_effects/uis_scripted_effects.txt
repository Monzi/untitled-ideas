# Tactic Ideas
tactic_cooldown_modifier = { # Controls how long the cooldown is between switching tactics
	add_country_modifier = {
		name = tactics_cooldown
		duration = 3653 # Days
	}
}
clear_tactic_bonus_modifiers = { # Clears all tactics modifiers
	remove_country_modifier = balanced_tactics
	remove_country_modifier = fire_tactics
	remove_country_modifier = shock_tactics
}

# Infantry / Cavalry Ideas
clear_army_training_modifiers = { # Clears all training modifiers
	remove_country_modifier = tier1_infantry
	remove_country_modifier = tier2_infantry
	remove_country_modifier = tier3_infantry
	remove_country_modifier = tier1_cavalry
	remove_country_modifier = tier2_cavalry
	remove_country_modifier = tier3_cavalry
}

# Academy Ideas
estate_action_GRANT_GENERALSHIP_ACADEMY = {
	if = {
		limit = {
			full_idea_group = innovativeness_ideas
		}
		create_general_scaling_with_tradition_and_pips = {
			add_fire = 1
			add_shock = 1
			add_manuever = 1
			add_siege = 1
		}
	}
	else = {
		create_leader_scaling_with_tradition = {
			leader = general
			type = army
		}
	}
	#add_estate_influence_modifier = {
	#	estate = estate_academy
	#	desc = EST_VAL_GRANTED_GENERALSHIP
	#	influence = 20
	#	duration = 3650
	#}
	add_estate_loyalty = {
		estate = estate_academy
		loyalty = 10
	}
}

# Maritime Ideas
maritime_ideas_building_counter = {#checks how many docks/drydocks/impressmentoffices are built and adds government mechanic power
	set_variable = {
		which = uis_maritime_counting
		value = 0
	}
	every_owned_province = {
		limit = {
			OR = {
				has_building = drydock
				has_building = dock
			}

		}
		set_province_flag = uis_has_dock_building
	}
	every_owned_province = {
		limit = { has_building = impressment_offices }
		set_province_flag = uis_has_impressment
	}
	while = {
		limit = {
			any_owned_province = {
				has_province_flag = uis_has_dock_building
			}
			NOT = {
				check_variable = {
					which = uis_maritime_counting
					value = 100
				}
			}
		}
		change_variable = {
			which = uis_maritime_counting
			value = 1
		}
		random_owned_province = {
			limit = {
				has_province_flag = uis_has_dock_building
			}
			owner = {
				add_government_power = {
					mechanic_type = uis_maritime_mechanic
					power_type = uis_maritime_power
					value = 1
				}
			}
			clr_province_flag = uis_has_dock_building
		}
	}
	while = {
		limit = {
			any_owned_province = {
				has_province_flag = uis_has_impressment
			}
			NOT = {
				check_variable = {
					which = uis_maritime_counting
					value = 100
				}
			}
		}
		change_variable = {
			which = uis_maritime_counting
			value = 1
		}
		random_owned_province = {
			limit = {
				has_province_flag = uis_has_impressment
			}
			owner = {
				add_government_power = {
					mechanic_type = uis_maritime_mechanic
					power_type = uis_maritime_power
					value = 1
				}
			}
			clr_province_flag = uis_has_impressment
		}
	}
#	
	set_country_flag = uis_buildings_counted
	set_variable = {
		which = uis_maritime_counting
		value = 0
	}
}
# VVV This may not be needed as we add power from the buildings on_build/on_destroyed itself VVV
#marine_building_power = {#The effect that fires when building naval buildings for maritime
#	FROM = {
#		if = {
#			limit = {
#				has_government_mechanic = uis_maritime_mechanic
#			}
#			add_government_power = {
#				mechanic_type = uis_maritime_mechanic
#				power_type = uis_maritime_power
#				value = 1
#			}
#		}
#	}
#}
#marine_building_removed_power = {
#	FROM = {
#		if = {
#			limit = {
#				has_government_mechanic = uis_maritime_mechanic
#			}
#			add_government_power = {
#				mechanic_type = uis_maritime_mechanic
#				power_type = uis_maritime_power
#				value = -1
#			}
#		}
#	}
#}
#maritime_removed_cleanup = {
#	remove_country_modifier = PLACEHOLDER
#}

# Centralization Regional Effect
centralization_mechanic = {
	capital_scope = {
		region = {
			limit = { 
				owned_by = ROOT
			}
			add_province_modifier = {
				name = centralized_region
				duration = -1
				hidden = yes
			}						
		}
	}
	every_owned_province = {
		limit = {
			NOT = {
				OR = {
					is_owned_by_trade_company = yes
					has_province_modifier = centralized_region
				}
			}
		}
		add_province_modifier = {
			name = not_centralized_region
			duration = -1
		}
	}
}
subject_centralization_mechanic = {
	hidden_effect = {
		capital_scope = {
			region = {
				save_event_target_as = targetRegion
			}
		}	
	}
	every_subject_country = {
		if = {
			limit = {
				capital_scope = {
					region = event_target:targetRegion
				}
			}
			capital_scope = {
				region = {
					limit = {
						owner = {
							is_subject_of = ROOT
						}
					}
					add_province_modifier = {
						name = centralized_region
						duration = -1
						hidden = yes
					}
				}					
			}
		}
	}
}
abandon_centralization_mechanic = {
	every_owned_province = {
		remove_province_modifier = centralized_region
		remove_province_modifier = not_centralized_region
	}
	every_subject_country = {
		every_owned_province = {
			limit = {
				has_province_modifier = centralized_region
			}
			remove_province_modifier = centralized_region
		}
	}
}

# Quality Ideas
quality_mechanic = {
	if = {
		limit = {
			full_idea_group = quality_ideas
		}
		every_owned_province = {
			limit = {
				trade_goods = iron
				NOT = { has_province_modifier = quality_iron }
			}
			add_province_modifier = {
				name = quality_iron
				duration = -1
			}
		}
		every_owned_province = {
			limit = {
				trade_goods = grain
				NOT = { has_province_modifier = quality_wheat }
			}
			add_province_modifier = {
				name = quality_wheat
				duration = -1
			}
		}
		every_owned_province = {
			limit = {
				trade_goods = copper
				NOT = { has_province_modifier = quality_copper }
			}
			add_province_modifier = {
				name = quality_copper
				duration = -1
			}
		}
	}
	else_if = {
		limit = {
			NOT = { full_idea_group = quality_ideas }
		}
		every_owned_province = {
			limit = {
				OR = {
					has_province_modifier = quality_iron
					has_province_modifier = quality_wheat
					has_province_modifier = quality_copper
				}
			}
			remove_province_modifier = quality_iron
			remove_province_modifier = quality_wheat
			remove_province_modifier = quality_copper
		}
	}
}
junta_event_option_4003A_effect = {
	uis_junta_medium_readiness_decrease = yes
	add_prestige = -5
	add_scaled_republican_tradition = 5
	add_legitimacy = 5
	add_meritocracy = 5
	add_devotion = 5
	add_country_modifier = {
		name = uis_junta_nobles_handled
		duration = 730
	}
	set_country_flag = uis_junta_nobleshandledFLAG	
}
junta_event_option_4003B_effect = {
	uis_junta_medium_readiness_increase = yes
	set_country_flag = uis_junta_nobleshandledFLAG
}
junta_event_chain_cleanup = {
	clr_country_flag = uis_junta_nobleshandledFLAG
	clr_country_flag = uis_junta_ally_help
	clr_country_flag = uis_junta_dealtwithrebelleader
	clr_country_flag = uis_junta_noblessupportjunta
	clr_country_flag = uis_junta_disaster_started
	clr_country_flag = uis_junta_requesthelp
	clr_country_flag = uis_junta_ally_help
	clr_country_flag = had_junta_religious_rebels
	clr_country_flag = uis_junta_fought_forts
	clr_country_flag = uis_junta_original_gov
	clr_country_flag = uis_junta_ruler_becomes_junta
	clr_country_flag = uis_junta_gov_change_to_junta
	clr_country_flag = uis_junta_end_by_decision
	remove_country_modifier = uis_junta_forts_paid
	remove_country_modifier = uis_junta_intolerance
	clear_saved_name = rebel_leader
	set_country_flag = had_junta_disaster
}
#generic effect to spawn peasants in same region as capital but not in capital
uis_regional_peasant_rebels_size1 = {
	random_owned_province = {
		limit = {
			is_capital = no
			region = event_target:uis_regional_peasant_rebels
		}
		spawn_rebels = {
			size = 2
			type = anti_tax_rebels
		}
	}
}
uis_regional_peasant_rebels_size2 = {
	random_owned_province = {
		limit = {
			is_capital = no
			region = event_target:uis_regional_peasant_rebels
		}
		spawn_rebels = {
			size = 2
			type = anti_tax_rebels
		}
	}
	random_owned_province = {
		limit = {
			is_capital = no
			region = event_target:uis_regional_peasant_rebels
		}
		spawn_rebels = {
			size = 2
			type = anti_tax_rebels
		}
	}
}
uis_regional_peasant_rebels_size3 = {
	random_owned_province = {
		limit = {
			is_capital = no
			region = event_target:uis_regional_peasant_rebels
		}
		spawn_rebels = {
			size = 2
			type = anti_tax_rebels
		}
	}
	random_owned_province = {
		limit = {
			is_capital = no
			region = event_target:uis_regional_peasant_rebels
		}
		spawn_rebels = {
			size = 2
			type = anti_tax_rebels
		}
	}
	random_owned_province = {
		limit = {
			is_capital = no
			region = event_target:uis_regional_peasant_rebels
		}
		spawn_rebels = {
			size = 2
			type = anti_tax_rebels
		}
	}
}
uis_junta_monthly_readiness_increase = {
	hidden_effect = {
		if = {
			limit = {
				capital_scope = {
					controlled_by = REB
				}
			}
			change_variable = {
				which = junta_readiness
				value = 5
			}
		}
		else = {
			change_variable = {
				which = junta_readiness
				value = 1
			}
		}
	}
	if = {
		limit = {
			check_variable = {
				which = junta_readiness
				value = 100
			}
		}
		set_variable = {
			which = junta_readiness
			value = 100
		}
	}
}
uis_junta_rebel_readiness_decrease = {
	hidden_effect = {
		subtract_variable = {
			which = junta_readiness
			value = 1
		}
	}
	if = {
		limit = {
			NOT = {
				check_variable = {
					which = junta_readiness
					value = 0
				}
			}
		}
		set_variable = {
			which = junta_readiness
			value = 0
		}
	}
}
uis_junta_small_readiness_increase = {
	custom_tooltip = UIS_JUNTA_READINESS_SMALL_INCREASE
	hidden_effect = {
		change_variable = {
			which = junta_readiness
			value = 5
		}
	}
	if = {
		limit = {
			check_variable = {
				which = junta_readiness
				value = 100
			}
		}
		set_variable = {
			which = junta_readiness
			value = 100
		}
	}
}
uis_junta_medium_readiness_increase = {
	custom_tooltip = UIS_JUNTA_READINESS_MEDIUM_INCREASE
	hidden_effect = {
		change_variable = {
			which = junta_readiness
			value = 10
		}
	}
	if = {
		limit = {
			check_variable = {
				which = junta_readiness
				value = 100
			}
		}
		set_variable = {
			which = junta_readiness
			value = 100
		}
	}
}
uis_junta_large_readiness_increase = {
	custom_tooltip = UIS_JUNTA_READINESS_LARGE_INCREASE
	hidden_effect = {
		change_variable = {
			which = junta_readiness
			value = 20
		}
	}
	if = {
		limit = {
			check_variable = {
				which = junta_readiness
				value = 100
			}
		}
		set_variable = {
			which = junta_readiness
			value = 100
		}
	}
}
uis_junta_small_readiness_decrease = {
	custom_tooltip = UIS_JUNTA_READINESS_SMALL_DECREASE
	hidden_effect = {
		subtract_variable = {
			which = junta_readiness
			value = 5
		}
	}
	if = {
		limit = {
			NOT = {
				check_variable = {
					which = junta_readiness
					value = 0
				}
			}
		}
		set_variable = {
			which = junta_readiness
			value = 0
		}
	}
}
uis_junta_medium_readiness_decrease = {
	custom_tooltip = UIS_JUNTA_READINESS_MEDIUM_DECREASE
	hidden_effect = {
		subtract_variable = {
			which = junta_readiness
			value = 10
		}
	}
	if = {
		limit = {
			NOT = {
				check_variable = {
					which = junta_readiness
					value = 0
				}
			}
		}
		set_variable = {
			which = junta_readiness
			value = 0
		}
	}
}
uis_junta_large_readiness_decrease = {
	custom_tooltip = UIS_JUNTA_READINESS_LARGE_DECREASE
	hidden_effect = {
		subtract_variable = {
			which = junta_readiness
			value = 20
		}
	}
	if = {
		limit = {
			NOT = {
				check_variable = {
					which = junta_readiness
					value = 0
				}
			}
		}
		set_variable = {
			which = junta_readiness
			value = 0
		}
	}
}