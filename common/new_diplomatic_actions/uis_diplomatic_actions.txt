# Influence
# ROOT = Sender, FROM = Target
make_decentralized_client_vassal = {
	category = influence

	is_visible = {
		ROOT = {
			full_idea_group = decentralization_ideas
		}
		FROM = {
			is_subject_of = ROOT
			OR = {
				is_subject_of_type = client_vassal
				is_subject_of_type = client_march
			}
		}
	}

	is_allowed = {
		ROOT = {
			dip_tech = 23
		}
		is_at_war = no
	}

	on_accept = {
		create_subject = {
			subject = FROM
			subject_type = decentralized_client_vassal
		}
	}

	on_decline = { # Subject cannot decline
	}

	ai_will_do = {
		always = yes
	}
}

# Covert
# ROOT = Sender, FROM = Target
raid_estate = {
	category = covert

	require_acceptance = no

	is_visible = {
		has_idea_group = spy_ideas
	}

	is_allowed = {
		has_spy_network_in = {
			who = FROM
			value = 40
		}
		full_idea_group = spy_ideas
	}

	on_accept = {
		add_spy_network_in = {
			who = FROM
			value = -40
		}
		# Do Raid on Estate here
	}

	on_decline = { # Target cannot decline
	}

	ai_will_do = {
		always = no
	}
}
# ROOT = Sender, FROM = Target
weaken_imperial_authority = {
	category = covert

	require_acceptance = no

	is_visible = {
		is_emperor = yes
		has_idea_group = spy_ideas
	}

	is_allowed = {
		has_spy_network_in = {
			who = FROM
			value = 60
		}
		full_idea_group = spy_ideas
	}

	on_accept = {
		add_spy_network_in = {
			who = FROM
			value = -60
		}
		random_list = {
			20 = { # Success
				add_imperial_influence = -10
			}
			40 = { # Success but gets discovered
				add_imperial_influence = -10
				# Add discovered effect
			}
			60 = { # Fails but doesn't get discovered
				 
			}
			80 = { # Fails
				# Add discovered effect
			}
		}
	}

	on_decline = { # Target cannot decline
	}

	ai_will_do = {
		always = no
	}
}
# ROOT = Sender, FROM = Target
plot_assassination = {
	category = covert

	require_acceptance = no

	is_visible = {
		has_idea_group = spy_ideas
	}

	is_allowed = {
		has_spy_network_in = {
			who = FROM
			value = 90
		}
		full_idea_group = spy_ideas
	}

	on_accept = {
		add_spy_network_in = {
			who = FROM
			value = -90
		}
	}

	on_decline = { # Target cannot decline
	}

	ai_will_do = {
		always = no
	}
}

# New categories
# Colonial
# ROOT = Sender, FROM = Target
su_manage_colony_borders = {
	category = colonial

	require_acceptance = no
	
	is_visible = {
		FROM = {
			is_subject_of = ROOT
			OR = {
				is_subject_of_type = colony
				is_subject_of_type = crown_colony
				is_subject_of_type = private_enterprise
				is_subject_of_type = self_governing_colony
			}
		}
	}
	
	is_allowed = {
		is_at_war = no
		FROM = {
			is_at_war = no
			any_owned_province = {
				NOT = {
					colonial_region = capital
				}
			}
		}
	}
	
	on_accept = {
		FROM = {
			every_owned_province = {
				limit = {
					NOT = {
						colonial_region = capital
					}
				}
				cede_province = ROOT
				remove_core = FROM
			}
		}
	}
	
	on_decline = {
	}
	
	ai_will_do = {
		FROM = {
			ai = yes
		}
	}
}
# ROOT = Sender, FROM = Target
su_manage_colonies = {
	category = colonial

	require_acceptance = no

	is_visible = {
		FROM = {
			is_subject_of = ROOT 
			OR = {
				is_subject_of_type = colony
				is_subject_of_type = crown_colony
				is_subject_of_type = private_enterprise
				is_subject_of_type = self_governing_colony
			}
		}
	}

	is_allowed = {
		is_at_war = no
		FROM = {
			is_at_war = no
		}
		any_subject_country = {
			NOT = { tag = FROM }
			is_at_war = no
			is_subject_of = ROOT
			OR = {
				is_subject_of_type = colony
				is_subject_of_type = crown_colony
				is_subject_of_type = private_enterprise
				is_subject_of_type = self_governing_colony 
			}
			# Potential fix even though it shows error in editor
			capital_scope = {
				colonial_region = FROM
			}
			# Potential fix
			capital_scope = {
				FROM = {
						capital_scope = {
							colonial_region = capital
						}
					}
			}
			# Potential fix, may not work since target is noget set
			capital_scope = {
				colonial_region = event_target:capital_region
			}
		}
	}

	on_accept = {
		FROM = {
			capital_scope = {
				save_event_target_as = capital_region
			}
		}
		every_subject_country = {
			limit = {
				NOT = { tag = FROM }
				OR = {
					is_subject_of_type = colony
					is_subject_of_type = crown_colony
					is_subject_of_type = private_enterprise
					is_subject_of_type = self_governing_colony 
				}
				capital_scope = {
					colonial_region = event_target:capital_region
				}
			}
			FROM = {
				inherit = PREV
			}
		}
	}
	
	on_decline = {
	}

	ai_will_do = {
		NOT = { # AI will not use this on colonies controlled by a player
			any_subject_country = {
				ai = no
			}
		}
	}
}